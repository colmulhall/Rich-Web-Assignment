)]}'
{"version":3,"file":"\\packages\\facebook.js","sources":["facebook/facebook_configure.html","facebook/facebook_configure.js","facebook/facebook_client.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,svB;;;;;;;;;;;;;;;;;;;ACAA,uE;AACA,8B;AACA,E;;AAEA,sE;AACA,U;AACA,yC;AACA,6C;AACA,I;AACA,E;;;;;;;;;;;;;;;;;;ACTA,c;;AAEA,4C;AACA,E;AACA,4B;AACA,mF;AACA,4E;AACA,W;AACA,oF;AACA,qD;AACA,4E;AACA,gD;AACA,iB;AACA,G;;AAEA,kF;AACA,gB;AACA,2I;AACA,W;AACA,G;;AAEA,oC;AACA,sF;AACA,2C;;AAEA,sB;AACA,4C;AACA,iD;;AAEA,gB;AACA,2E;AACA,wE;AACA,gF;;AAEA,oF;AACA,E","sourcesContent":["Template.__define__(\"configureLoginServiceDialogForFacebook\",Package.handlebars.Handlebars.json_ast_to_func([\"<p>\\r\\n    First, you'll need to register your app on Facebook. Follow these steps:\\r\\n  </p>\\r\\n  <ol>\\r\\n    <li>\\r\\n      Visit <a href=\\\"https://developers.facebook.com/apps\\\" target=\\\"_blank\\\">https://developers.facebook.com/apps</a>\\r\\n    </li>\\r\\n    <li>\\r\\n      Create New App (Only a name is required.)\\r\\n    </li>\\r\\n    <li>\\r\\n      Set \\\"Sandbox Mode\\\" to \\\"Disabled\\\"\\r\\n    </li>\\r\\n    <li>\\r\\n      Under \\\"Select how your app integrates with Facebook\\\", expand \\\"Website with Facebook Login\\\".\\r\\n    </li>\\r\\n    <li>\\r\\n      Set Site URL to: <span class=\\\"url\\\">\",[\"{\",[[0,\"siteUrl\"]]],\"</span>\\r\\n    </li>\\r\\n  </ol>\"]));\n","Template.configureLoginServiceDialogForFacebook.siteUrl = function () {\r\n  return Meteor.absoluteUrl();\r\n};\r\n\r\nTemplate.configureLoginServiceDialogForFacebook.fields = function () {\r\n  return [\r\n    {property: 'appId', label: 'App ID'},\r\n    {property: 'secret', label: 'App Secret'}\r\n  ];\r\n};","Facebook = {};\r\n\r\n// Request Facebook credentials for the user\r\n//\r\n// @param options {optional}\r\n// @param credentialRequestCompleteCallback {Function} Callback function to call on\r\n//   completion. Takes one argument, credentialToken on success, or Error on\r\n//   error.\r\nFacebook.requestCredential = function (options, credentialRequestCompleteCallback) {\r\n  // support both (options, callback) and (callback).\r\n  if (!credentialRequestCompleteCallback && typeof options === 'function') {\r\n    credentialRequestCompleteCallback = options;\r\n    options = {};\r\n  }\r\n\r\n  var config = ServiceConfiguration.configurations.findOne({service: 'facebook'});\r\n  if (!config) {\r\n    credentialRequestCompleteCallback && credentialRequestCompleteCallback(new ServiceConfiguration.ConfigError(\"Service not configured\"));\r\n    return;\r\n  }\r\n\r\n  var credentialToken = Random.id();\r\n  var mobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent);\r\n  var display = mobile ? 'touch' : 'popup';\r\n\r\n  var scope = \"email\";\r\n  if (options && options.requestPermissions)\r\n    scope = options.requestPermissions.join(',');\r\n\r\n  var loginUrl =\r\n        'https://www.facebook.com/dialog/oauth?client_id=' + config.appId +\r\n        '&redirect_uri=' + Meteor.absoluteUrl('_oauth/facebook?close') +\r\n        '&display=' + display + '&scope=' + scope + '&state=' + credentialToken;\r\n\r\n  Oauth.initiateLogin(credentialToken, loginUrl, credentialRequestCompleteCallback);\r\n};\r\n"]}