)]}'
{"version":3,"file":"\\packages\\accounts-ui-unstyled.js","sources":["accounts-ui-unstyled/accounts_ui.js","accounts-ui-unstyled/login_buttons.html","accounts-ui-unstyled/login_buttons_single.html","accounts-ui-unstyled/login_buttons_dropdown.html","accounts-ui-unstyled/login_buttons_dialogs.html","accounts-ui-unstyled/login_buttons_session.js","accounts-ui-unstyled/login_buttons.js","accounts-ui-unstyled/login_buttons_single.js","accounts-ui-unstyled/login_buttons_dropdown.js","accounts-ui-unstyled/login_buttons_dialogs.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iB;;AAEA,wB;AACA,yB;AACA,yB;AACA,E;;AAEA,wC;AACA,0B;AACA,yF;AACA,0C;AACA,qC;AACA,iE;AACA,K;;AAEA,qC;AACA,qC;AACA,oB;AACA,2B;AACA,oC;AACA,sB;AACA,kB;AACA,uC;AACA,oD;AACA,+F;AACA,U;AACA,iF;AACA,Y;AACA,wH;AACA,K;AACA,G;;AAEA,mC;AACA,mC;AACA,kE;AACA,6D;AACA,4G;AACA,6C;AACA,+F;AACA,c;AACA,iE;AACA,O;AACA,O;AACA,G;;AAEA,oC;AACA,oC;AACA,mE;AACA,+B;AACA,oH;;AAEA,8D;AACA,6G;AACA,c;AACA,kE;AACA,O;AACA,O;AACA,G;AACA,E;;AAEA,oC;AACA,mE;AACA,E;;;;;;;;;;;;;;;;;;;;AC9DA,mtB;AACA,2U;AACA,8yB;AACA,qW;AACA,8N;AACA,ia;;;;;;;;;;;;;;;;;;;ACLA,iyB;AACA,+M;AACA,sW;;;;;;;;;;;;;;;;;;;ACFA,43B;AACA,oa;AACA,g7B;AACA,2lB;AACA,oY;AACA,00C;AACA,4lB;AACA,wO;AACA,me;AACA,kX;;;;;;;;;;;;;;;;;;;ACTA,ouC;AACA,wyB;AACA,yU;AACA,knD;AACA,qY;;;;;;;;;;;;;;;;;;;ACJA,kB;AACA,oB;;AAEA,2E;AACA,iB;AACA,yB;AACA,yB;AACA,sB;;AAEA,iB;AACA,gB;;AAEA,2C;AACA,uB;AACA,uB;AACA,sB;;AAEA,uC;AACA,2C;AACA,2C;AACA,E;;AAEA,kC;AACA,mC;AACA,kE;AACA,E;;AAEA,wC;;AAEA,iE;AACA,mE;AACA,qE;AACA,M;AACA,iC;AACA,6B;AACA,qB;AACA,yD;AACA,uH;;AAEA,0B;AACA,I;;AAEA,8B;AACA,yC;AACA,I;;AAEA,sB;AACA,qB;AACA,yC;AACA,I;;AAEA,8B;AACA,oC;AACA,4C;AACA,4C;AACA,yC;AACA,uC;AACA,yB;AACA,I;;AAEA,kC;AACA,oC;AACA,sC;AACA,gC;AACA,I;;AAEA,mC;AACA,uC;AACA,mC;AACA,gC;AACA,I;;AAEA,mE;AACA,uC;AACA,4C;AACA,uC;AACA,oC;AACA,I;;AAEA,mE;AACA,6D;AACA,iC;AACA,I;AACA,oE;AACA,yD;AACA,oE;AACA,e;AACA,qC;AACA,uC;AACA,wC;AACA,I;;AAEA,8B;AACA,oC;AACA,mC;AACA,I;;AAEA,qC;AACA,yD;AACA,6D;AACA,8D;AACA,G;AACA,E;;;;;;;;;;;;;;;;;;;ACtGA,kB;AACA,wD;;AAEA,0B;AACA,iB;AACA,sB;AACA,uC;AACA,iF;AACA,Q;AACA,gF;AACA,K;;AAEA,0C;AACA,+B;AACA,6C;AACA,+B;AACA,0C;AACA,O;AACA,G;AACA,G;;AAEA,iC;AACA,uC;AACA,G;;AAEA,E;AACA,U;AACA,E;;AAEA,2B;AACA,2B;AACA,Y;AACA,c;;AAEA,wC;AACA,6B;AACA,oB;AACA,yB;AACA,8D;AACA,kC;;AAEA,Y;AACA,E;;AAEA,gE;AACA,mE;AACA,iE;AACA,E;AACA,4E;AACA,sD;AACA,E;AACA,+D;AACA,0D;AACA,8B;AACA,gC;AACA,kB;;AAEA,mC;AACA,gF;;AAEA,+D;AACA,wD;AACA,mB;AACA,kB;;AAEA,oD;AACA,2B;AACA,8B;;AAEA,yC;AACA,wB;AACA,K;AACA,E;;AAEA,kC;AACA,wC;AACA,E;;AAEA,wB;AACA,+D;AACA,E;;AAEA,kE;AACA,E;AACA,+D;AACA,sB;AACA,wC;AACA,6B;AACA,gB;AACA,U;AACA,oF;AACA,iB;AACA,G;AACA,E;AACA,kC;AACA,+E;AACA,gB;;AAEA,kC;AACA,gB;AACA,U;AACA,sD;AACA,iB;AACA,G;AACA,E;AACA,wC;AACA,6B;AACA,gB;AACA,U;AACA,oF;AACA,iB;AACA,G;AACA,E;;AAEA,E;AACA,gC;AACA,E;;AAEA,oD;;AAEA,4D;;AAEA,6D;AACA,oC;AACA,4B;AACA,oB;AACA,oF;AACA,qB;AACA,E;;AAEA,mE;AACA,4C;AACA,E;;;AAGA,E;AACA,gC;AACA,E;;AAEA,gE;AACA,U;AACA,mD;;;;AAIA,E;AACA,kD;AACA,E;;AAEA,2E;;;;AAIA,E;AACA,+B;AACA,E;;AAEA,2D;AACA,iD;AACA,E;;AAEA,0D;AACA,gD;AACA,E;;;AAGA,E;AACA,wC;AACA,E;;AAEA,2D;;;;;;;;;;;;;;;;;;;;AC1KA,kB;AACA,wD;;AAEA,yD;AACA,sC;AACA,gC;AACA,wC;AACA,mC;AACA,iB;AACA,4C;AACA,+D;AACA,qB;AACA,mE;AACA,0D;AACA,c;AACA,wE;AACA,O;AACA,M;;AAEA,yE;;AAEA,2D;AACA,6D;AACA,wF;AACA,8D;AACA,0F;;AAEA,wC;AACA,G;AACA,G;;AAEA,2E;AACA,6E;AACA,E;;AAEA,gF;AACA,6B;AACA,yE;AACA,oB;AACA,M;AACA,iC;AACA,E;;AAEA,8E;AACA,+B;AACA,uC;AACA,oD;AACA,E;;;;;;;;;;;;;;;;;;;AC/CA,kB;AACA,wD;;AAEA,0D;AACA,+B;AACA,+B;AACA,oE;AACA,qD;AACA,iB;AACA,8B;AACA,I;AACA,0C;AACA,wC;AACA,G;AACA,G;;;AAGA,E;AACA,oD;AACA,E;;AAEA,+C;AACA,2D;AACA,wC;AACA,0D;AACA,G;AACA,G;;AAEA,iE;;AAEA,2E;AACA,yD;AACA,E;;AAEA,wE;AACA,sD;AACA,E;;AAEA,sE;AACA,oD;AACA,E;;AAEA,mF;AACA,2E;AACA,4E;AACA,kF;AACA,I;AACA,2E;AACA,2B;AACA,oF;AACA,E;;;AAGA,E;AACA,qD;AACA,E;;AAEA,gD;AACA,gD;AACA,oB;AACA,I;;AAEA,uD;AACA,6B;AACA,uB;AACA,I;;AAEA,uD;AACA,qB;AACA,I;;AAEA,qC;AACA,wC;;AAEA,iE;AACA,6D;AACA,uD;AACA,6E;AACA,0E;AACA,sD;;AAEA,kD;AACA,2D;AACA,8E;AACA,iB;;AAEA,kD;AACA,0B;AACA,iE;AACA,4B;AACA,2D;AACA,sC;AACA,8C;AACA,0E;AACA,Q;AACA,qE;AACA,oF;;AAEA,mE;AACA,mE;AACA,4D;AACA,oC;AACA,M;AACA,4C;AACA,qI;AACA,gE;AACA,kC;AACA,wG;AACA,mC;AACA,I;AACA,8C;AACA,wC;;AAEA,iE;AACA,uD;AACA,6E;;AAEA,mD;AACA,0D;AACA,8E;AACA,iB;;AAEA,kD;AACA,uB;AACA,qE;AACA,sC;AACA,8C;AACA,iF;;AAEA,I;AACA,4C;AACA,wC;;AAEA,6D;AACA,sD;AACA,6F;;AAEA,mD;AACA,2D;AACA,8E;AACA,iB;;AAEA,kD;AACA,iE;AACA,+C;AACA,2D;AACA,oF;AACA,2D;AACA,mF;AACA,I;AACA,oK;AACA,6B;AACA,sB;AACA,G;AACA,G;;AAEA,iE;AACA,yE;AACA,2B;AACA,iB;AACA,U;AACA,kD;AACA,yC;AACA,iE;AACA,0C;AACA,Y;AACA,kC;AACA,K;AACA,G;AACA,E;;AAEA,uE;AACA,oD;AACA,E;;AAEA,gF;;AAEA,gD;AACA,uE;;AAEA,4E;AACA,kC;AACA,E;;AAEA,2E;AACA,uC;AACA,E;;AAEA,+D;AACA,qB;;AAEA,qE;AACA,qB;AACA,qE;AACA,2B;AACA,yB;AACA,+D;AACA,iC;AACA,Q;AACA,mD;AACA,2B;AACA,yD;AACA,Q;AACA,iE;AACA,2B;AACA,sD;AACA,Q;AACA,0E;AACA,2B;AACA,mB;AACA,O;AACA,I;;AAEA,sB;AACA,mD;AACA,2B;AACA,yB;AACA,gF;AACA,iC;AACA,Q;AACA,iE;AACA,2B;AACA,yB;AACA,8C;AACA,iC;AACA,Q;AACA,4E;AACA,2B;AACA,uE;AACA,Q;AACA,0E;AACA,2B;AACA,mB;AACA,Q;AACA,iE;AACA,2B;AACA,2B;AACA,8D;AACA,mE;AACA,qC;AACA,yB;AACA,0D;AACA,iC;AACA,O;AACA,I;;AAEA,8E;AACA,E;;AAEA,mF;AACA,yD;AACA,E;;AAEA,0E;AACA,sG;AACA,E;;AAEA,2E;AACA,iD;AACA,E;;AAEA,oF;AACA,wD;AACA,E;;AAEA,qF;AACA,oB;AACA,wE;AACA,4B;AACA,E;;AAEA,yD;AACA,kC;AACA,E;;;AAGA,E;AACA,sC;AACA,E;;AAEA,6C;AACA,8G;AACA,6B;AACA,uB;AACA,I;AACA,0D;AACA,qB;AACA,G;AACA,G;;AAEA,2D;AACA,U;AACA,sF;AACA,2B;AACA,mB;AACA,Q;AACA,8E;AACA,2B;AACA,mB;AACA,Q;AACA,qE;AACA,2B;AACA,2B;AACA,8D;AACA,mE;AACA,qC;AACA,yB;AACA,0D;AACA,iC;AACA,O;AACA,I;AACA,E;;;AAGA,E;AACA,U;AACA,E;;AAEA,qC;AACA,4C;AACA,e;AACA,gB;AACA,M;AACA,yB;AACA,E;;AAEA,4C;AACA,4C;AACA,e;AACA,gB;AACA,M;AACA,kF;AACA,E;;AAEA,iC;AACA,8C;AACA,a;AACA,M;AACA,Y;AACA,E;;AAEA,yB;AACA,sC;;AAEA,2D;AACA,qD;AACA,2E;AACA,wE;AACA,oD;;AAEA,oB;AACA,0B;AACA,oC;AACA,a;AACA,Q;AACA,2C;AACA,8B;AACA,8B;AACA,a;AACA,Q;AACA,qC;AACA,wC;AACA,sF;AACA,6D;AACA,2C;AACA,a;AACA,Q;AACA,sC;AACA,U;AACA,gF;AACA,G;;AAEA,8E;AACA,gB;AACA,wE;AACA,Y;AACA,0C;AACA,K;AACA,K;AACA,E;;AAEA,0B;AACA,sC;;AAEA,0D;;AAEA,2D;AACA,0B;AACA,oC;AACA,a;AACA,Q;AACA,kC;AACA,G;;AAEA,qD;AACA,uB;AACA,8B;AACA,a;AACA,Q;AACA,4B;AACA,G;;AAEA,wE;AACA,oD;AACA,kC;AACA,W;AACA,M;AACA,gC;;AAEA,qC;AACA,W;;AAEA,iD;AACA,gB;AACA,wE;AACA,Y;AACA,0C;AACA,K;AACA,K;AACA,E;;AAEA,kC;AACA,sC;;AAEA,+D;AACA,kC;AACA,8D;AACA,gB;AACA,0E;AACA,U;AACA,sD;AACA,O;AACA,U;AACA,sD;AACA,G;AACA,E;;AAEA,kC;AACA,sC;;AAEA,wE;AACA,2D;;AAEA,wE;AACA,oD;AACA,kC;AACA,W;;AAEA,qC;AACA,W;;AAEA,mE;AACA,gB;AACA,wE;AACA,Y;AACA,6D;AACA,yD;AACA,0D;AACA,K;AACA,K;AACA,E;;AAEA,+C;AACA,wE;AACA,+D;AACA,+B;AACA,0E;AACA,sD;AACA,qC;AACA,gE;AACA,mB;AACA,K;AACA,G;AACA,c;AACA,E;;AAEA,2C;AACA,gE;AACA,gE;AACA,gE;AACA,8D;AACA,+D;AACA,8C;AACA,I;AACA,wD;AACA,sC;AACA,wE;AACA,4B;AACA,uB;AACA,6B;AACA,yB;AACA,E;;;;;;;;;;;;;;;;;;;AC3eA,kB;AACA,wD;;;AAGA,E;AACA,2D;AACA,oE;AACA,mE;AACA,8C;AACA,E;;AAEA,mC;AACA,8E;AACA,C;;AAEA,mC;AACA,8E;AACA,C;;AAEA,mE;AACA,mE;AACA,iE;AACA,4B;AACA,mC;AACA,sE;AACA,kC;AACA,iB;AACA,2D;AACA,kD;AACA,O;AACA,G;AACA,G;;;AAGA,E;AACA,+B;AACA,E;;AAEA,sC;AACA,6D;AACA,oB;AACA,I;AACA,6D;AACA,6B;AACA,sB;AACA,I;AACA,6D;AACA,wD;AACA,gC;AACA,G;AACA,G;;AAEA,iC;AACA,sC;AACA,iF;AACA,qC;AACA,W;;AAEA,yB;AACA,+D;AACA,sB;AACA,kB;AACA,0E;AACA,c;AACA,4D;AACA,oC;AACA,O;AACA,O;AACA,E;;AAEA,iE;AACA,uD;AACA,E;;;AAGA,E;AACA,+B;AACA,E;;AAEA,sC;AACA,6D;AACA,oB;AACA,I;AACA,yD;AACA,6B;AACA,sB;AACA,I;AACA,6D;AACA,wD;AACA,gC;AACA,G;AACA,G;;AAEA,iC;AACA,sC;AACA,0E;AACA,kC;AACA,W;;AAEA,yB;AACA,4D;AACA,sB;AACA,kB;AACA,0E;AACA,c;AACA,4D;AACA,oC;AACA,O;AACA,O;AACA,E;;AAEA,iE;AACA,uD;AACA,E;;;AAGA,E;AACA,mC;AACA,E;;AAEA,0C;AACA,sD;AACA,wD;AACA,G;AACA,G;;AAEA,yD;AACA,sD;AACA,E;;;AAGA,E;AACA,sC;AACA,E;;AAEA,6C;AACA,wD;AACA,wC;AACA,G;AACA,G;;AAEA,4D;AACA,qG;AACA,mC;AACA,E;;;AAGA,E;AACA,uC;AACA,E;;AAEA,8C;AACA,gE;AACA,yE;AACA,I;AACA,2E;AACA,wE;AACA,+E;AACA,kE;AACA,0F;AACA,2B;AACA,4B;AACA,Q;;AAEA,4C;AACA,qD;AACA,gE;AACA,mE;AACA,mE;AACA,S;;AAEA,qC;AACA,oF;AACA,kB;AACA,iF;AACA,Y;AACA,+E;AACA,S;AACA,K;AACA,I;AACA,6E;AACA,6E;AACA,wE;AACA,0C;AACA,mE;AACA,qE;AACA,wE;AACA,2B;AACA,G;AACA,G;;AAEA,mE;AACA,6D;AACA,4D;AACA,sC;AACA,oE;AACA,mC;AACA,uE;AACA,K;;AAEA,oF;AACA,E;;AAEA,iE;AACA,sD;AACA,iE;AACA,sF;AACA,8E;AACA,E;;AAEA,uC;AACA,iE;AACA,2B;AACA,E;;AAEA,yE;AACA,+B;AACA,E;;AAEA,6D;AACA,uE;AACA,E;;AAEA,wE;AACA,qC;AACA,2D;AACA,E;;AAEA,kE;AACA,4E;AACA,E;;AAEA,8E;AACA,+B;AACA,uC;AACA,oD;AACA,E","sourcesContent":["Accounts.ui = {};\r\n\r\nAccounts.ui._options = {\r\n  requestPermissions: {},\r\n  requestOfflineToken: {}\r\n};\r\n\r\nAccounts.ui.config = function(options) {\r\n  // validate options keys\r\n  var VALID_KEYS = ['passwordSignupFields', 'requestPermissions', 'requestOfflineToken'];\r\n  _.each(_.keys(options), function (key) {\r\n    if (!_.contains(VALID_KEYS, key))\r\n      throw new Error(\"Accounts.ui.config: Invalid key: \" + key);\r\n  });\r\n\r\n  // deal with `passwordSignupFields`\r\n  if (options.passwordSignupFields) {\r\n    if (_.contains([\r\n      \"USERNAME_AND_EMAIL\",\r\n      \"USERNAME_AND_OPTIONAL_EMAIL\",\r\n      \"USERNAME_ONLY\",\r\n      \"EMAIL_ONLY\"\r\n    ], options.passwordSignupFields)) {\r\n      if (Accounts.ui._options.passwordSignupFields)\r\n        throw new Error(\"Accounts.ui.config: Can't set `passwordSignupFields` more than once\");\r\n      else\r\n        Accounts.ui._options.passwordSignupFields = options.passwordSignupFields;\r\n    } else {\r\n      throw new Error(\"Accounts.ui.config: Invalid option for `passwordSignupFields`: \" + options.passwordSignupFields);\r\n    }\r\n  }\r\n\r\n  // deal with `requestPermissions`\r\n  if (options.requestPermissions) {\r\n    _.each(options.requestPermissions, function (scope, service) {\r\n      if (Accounts.ui._options.requestPermissions[service]) {\r\n        throw new Error(\"Accounts.ui.config: Can't set `requestPermissions` more than once for \" + service);\r\n      } else if (!(scope instanceof Array)) {\r\n        throw new Error(\"Accounts.ui.config: Value for `requestPermissions` must be an array\");\r\n      } else {\r\n        Accounts.ui._options.requestPermissions[service] = scope;\r\n      }\r\n    });\r\n  }\r\n\r\n  // deal with `requestOfflineToken`\r\n  if (options.requestOfflineToken) {\r\n    _.each(options.requestOfflineToken, function (value, service) {\r\n      if (service !== 'google')\r\n        throw new Error(\"Accounts.ui.config: `requestOfflineToken` only supported for Google login at the moment.\");\r\n\r\n      if (Accounts.ui._options.requestOfflineToken[service]) {\r\n        throw new Error(\"Accounts.ui.config: Can't set `requestOfflineToken` more than once for \" + service);\r\n      } else {\r\n        Accounts.ui._options.requestOfflineToken[service] = value;\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\npasswordSignupFields = function () {\r\n  return Accounts.ui._options.passwordSignupFields || \"EMAIL_ONLY\";\r\n};\r\n\r\n","Template.__define__(\"_loginButtons\",Package.handlebars.Handlebars.json_ast_to_func([\"<div id=\\\"login-buttons\\\" class=\\\"login-buttons-dropdown-align-\",[\"{\",[[0,\"align\"]]],\"\\\">\\r\\n    \",[\"#\",[[0,\"if\"],[0,\"currentUser\"]],[\"\\r\\n      \",[\"#\",[[0,\"if\"],[0,\"loggingIn\"]],[\"\\r\\n        \",\"\\r\\n        \",[\"#\",[[0,\"if\"],[0,\"dropdown\"]],[\"\\r\\n          \",[\">\",\"_loginButtonsLoggingIn\"],\"\\r\\n        \"],[\"\\r\\n          <div class=\\\"login-buttons-with-only-one-button\\\">\\r\\n            \",[\">\",\"_loginButtonsLoggingInSingleLoginButton\"],\"\\r\\n          </div>\\r\\n        \"]],\"\\r\\n      \"],[\"\\r\\n        \",[\">\",\"_loginButtonsLoggedIn\"],\"\\r\\n      \"]],\"\\r\\n    \"],[\"\\r\\n      \",[\">\",\"_loginButtonsLoggedOut\"],\"\\r\\n    \"]],\"\\r\\n  </div>\"]));\nTemplate.__define__(\"_loginButtonsLoggedIn\",Package.handlebars.Handlebars.json_ast_to_func([[\"#\",[[0,\"if\"],[0,\"dropdown\"]],[\"\\r\\n    \",[\">\",\"_loginButtonsLoggedInDropdown\"],\"\\r\\n  \"],[\"\\r\\n    <div class=\\\"login-buttons-with-only-one-button\\\">\\r\\n      \",[\">\",\"_loginButtonsLoggedInSingleLogoutButton\"],\"\\r\\n    </div>\\r\\n  \"]]]));\nTemplate.__define__(\"_loginButtonsLoggedOut\",Package.handlebars.Handlebars.json_ast_to_func([[\"#\",[[0,\"if\"],[0,\"services\"]],[\" \",\"\\r\\n    \",[\"#\",[[0,\"if\"],[0,\"configurationLoaded\"]],[\"\\r\\n      \",[\"#\",[[0,\"if\"],[0,\"dropdown\"]],[\" \",\"\\r\\n        \",[\">\",\"_loginButtonsLoggedOutDropdown\"],\"\\r\\n      \"],[\"\\r\\n        \",[\"#\",[[0,\"with\"],[0,\"singleService\"]],[\" \",\"\\r\\n          <div class=\\\"login-buttons-with-only-one-button\\\">\\r\\n            \",[\"#\",[[0,\"if\"],[0,\"loggingIn\"]],[\"\\r\\n              \",[\">\",\"_loginButtonsLoggingInSingleLoginButton\"],\"\\r\\n            \"],[\"\\r\\n              \",[\">\",\"_loginButtonsLoggedOutSingleLoginButton\"],\"\\r\\n            \"]],\"\\r\\n          </div>\\r\\n        \"]],\"\\r\\n      \"]],\"\\r\\n    \"]],\"\\r\\n  \"],[\"\\r\\n    <div class=\\\"no-services\\\">No login services configured</div>\\r\\n  \"]]]));\nTemplate.__define__(\"_loginButtonsMessages\",Package.handlebars.Handlebars.json_ast_to_func([[\"#\",[[0,\"if\"],[0,\"errorMessage\"]],[\"\\r\\n    <div class=\\\"message error-message\\\">\",[\"{\",[[0,\"errorMessage\"]]],\"</div>\\r\\n  \"]],\"\\r\\n  \",[\"#\",[[0,\"if\"],[0,\"infoMessage\"]],[\"\\r\\n    <div class=\\\"message info-message\\\">\",[\"{\",[[0,\"infoMessage\"]]],\"</div>\\r\\n  \"]]]));\nTemplate.__define__(\"_loginButtonsLoggingIn\",Package.handlebars.Handlebars.json_ast_to_func([[\">\",\"_loginButtonsLoggingInPadding\"],\"\\r\\n  <div class=\\\"loading\\\">&nbsp;</div>\\r\\n  \",[\">\",\"_loginButtonsLoggingInPadding\"]]));\nTemplate.__define__(\"_loginButtonsLoggingInPadding\",Package.handlebars.Handlebars.json_ast_to_func([[\"#\",[[0,\"unless\"],[0,\"dropdown\"]],[\"\\r\\n    \",\"\\r\\n    <div class=\\\"login-buttons-padding\\\">\\r\\n      <div class=\\\"login-button single-login-button\\\" style=\\\"visibility: hidden;\\\" id=\\\"login-buttons-logout\\\">&nbsp;</div>\\r\\n    </div>\\r\\n  \"],[\"\\r\\n    \",\"\\r\\n    <div class=\\\"login-buttons-padding\\\" />\\r\\n  \"]]]));\n","Template.__define__(\"_loginButtonsLoggedOutSingleLoginButton\",Package.handlebars.Handlebars.json_ast_to_func([\"<div class=\\\"login-text-and-button\\\">\\r\\n    <div class=\\\"login-button single-login-button \",[\"#\",[[0,\"unless\"],[0,\"configured\"]],[\"configure-button\"]],\"\\\"\\r\\n         id=\\\"login-buttons-\",[\"{\",[[0,\"name\"]]],\"\\\">\\r\\n      <div class=\\\"login-image\\\" id=\\\"login-buttons-image-\",[\"{\",[[0,\"name\"]]],\"\\\"></div>\\r\\n      \",[\"#\",[[0,\"if\"],[0,\"configured\"]],[\"\\r\\n        <span class=\\\"text-besides-image sign-in-text-\",[\"{\",[[0,\"name\"]]],\"\\\">Sign in with \",[\"{\",[[0,\"capitalizedName\"]]],\"</span>\\r\\n      \"],[\"\\r\\n        <span class=\\\"text-besides-image configure-text-\",[\"{\",[[0,\"name\"]]],\"\\\">Configure \",[\"{\",[[0,\"capitalizedName\"]]],\" Login</span>\\r\\n      \"]],\"\\r\\n    </div>\\r\\n  </div>\"]));\nTemplate.__define__(\"_loginButtonsLoggingInSingleLoginButton\",Package.handlebars.Handlebars.json_ast_to_func([\"<div class=\\\"login-text-and-button\\\">\\r\\n    \",[\">\",\"_loginButtonsLoggingIn\"],\"\\r\\n  </div>\"]));\nTemplate.__define__(\"_loginButtonsLoggedInSingleLogoutButton\",Package.handlebars.Handlebars.json_ast_to_func([\"<div class=\\\"login-text-and-button\\\">\\r\\n    <div class=\\\"login-display-name\\\">\\r\\n      \",[\"{\",[[0,\"displayName\"]]],\"\\r\\n    </div>\\r\\n    <div class=\\\"login-button single-login-button\\\" id=\\\"login-buttons-logout\\\">Sign Out</div>\\r\\n  </div>\"]));\n","Template.__define__(\"_loginButtonsLoggedInDropdown\",Package.handlebars.Handlebars.json_ast_to_func([\"<div class=\\\"login-link-and-dropdown-list\\\">\\r\\n    <a class=\\\"login-link-text\\\" id=\\\"login-name-link\\\">\\r\\n      \",[\"{\",[[0,\"displayName\"]]],\" ▾\\r\\n    </a>\\r\\n\\r\\n    \",[\"#\",[[0,\"if\"],[0,\"dropdownVisible\"]],[\"\\r\\n      <div id=\\\"login-dropdown-list\\\" class=\\\"accounts-dialog\\\">\\r\\n        <a class=\\\"login-close-text\\\">Close</a>\\r\\n        <div class=\\\"login-close-text-clear\\\"></div>\\r\\n\\r\\n        \",[\"#\",[[0,\"if\"],[0,\"inMessageOnlyFlow\"]],[\"\\r\\n          \",[\">\",\"_loginButtonsMessages\"],\"\\r\\n        \"],[\"\\r\\n          \",[\"#\",[[0,\"if\"],[0,\"inChangePasswordFlow\"]],[\"\\r\\n            \",[\">\",\"_loginButtonsChangePassword\"],\"\\r\\n          \"],[\"\\r\\n            \",[\">\",\"_loginButtonsLoggedInDropdownActions\"],\"\\r\\n          \"]],\"\\r\\n        \"]],\"\\r\\n      </div>\\r\\n    \"]],\"\\r\\n  </div>\"]));\nTemplate.__define__(\"_loginButtonsLoggedInDropdownActions\",Package.handlebars.Handlebars.json_ast_to_func([[\"#\",[[0,\"if\"],[0,\"allowChangingPassword\"]],[\"\\r\\n    <div class=\\\"login-button\\\" id=\\\"login-buttons-open-change-password\\\">\\r\\n      Change password\\r\\n    </div>\\r\\n  \"]],\"\\r\\n\\r\\n  <div class=\\\"login-button\\\" id=\\\"login-buttons-logout\\\">\\r\\n    Sign out\\r\\n  </div>\\r\\n\\r\\n  \",[\">\",\"_loginButtonsMessages\"]]));\nTemplate.__define__(\"_loginButtonsLoggedOutDropdown\",Package.handlebars.Handlebars.json_ast_to_func([\"<div class=\\\"login-link-and-dropdown-list \",[\"{\",[[0,\"additionalClasses\"]]],\"\\\">\\r\\n    \",[\"#\",[[0,\"if\"],[0,\"dropdownVisible\"]],[\"\\r\\n      \",\"\\r\\n      <a class=\\\"login-link-text\\\" id=\\\"login-sign-in-link\\\">Sign in ▾</a>\\r\\n      <div id=\\\"login-dropdown-list\\\" class=\\\"accounts-dialog\\\">\\r\\n        <a class=\\\"login-close-text\\\">Close</a>\\r\\n        \",[\"#\",[[0,\"if\"],[0,\"loggingIn\"]],[\"\\r\\n          \",[\">\",\"_loginButtonsLoggingIn\"],\"\\r\\n        \"]],\"\\r\\n        <div class=\\\"login-close-text-clear\\\"></div>\\r\\n        \",[\">\",\"_loginButtonsLoggedOutAllServices\"],\"\\r\\n      </div>\\r\\n    \"],[\"\\r\\n      \",[\"#\",[[0,\"if\"],[0,\"loggingIn\"]],[\"\\r\\n        \",\"\\r\\n        \",[\">\",\"_loginButtonsLoggingIn\"],\"\\r\\n      \"],[\"\\r\\n        <a class=\\\"login-link-text\\\" id=\\\"login-sign-in-link\\\">Sign in ▾</a>\\r\\n      \"]],\"\\r\\n    \"]],\"\\r\\n  </div>\"]));\nTemplate.__define__(\"_loginButtonsLoggedOutAllServices\",Package.handlebars.Handlebars.json_ast_to_func([[\"#\",[[0,\"each\"],[0,\"services\"]],[\"\\r\\n    \",[\"#\",[[0,\"if\"],[0,\"isPasswordService\"]],[\"\\r\\n      \",[\"#\",[[0,\"if\"],[0,\"hasOtherServices\"]],[\" \",\"\\r\\n        \",[\">\",\"_loginButtonsLoggedOutPasswordServiceSeparator\"],\"\\r\\n      \"]],\"\\r\\n      \",[\">\",\"_loginButtonsLoggedOutPasswordService\"],\"\\r\\n    \"],[\"\\r\\n      \",[\">\",\"_loginButtonsLoggedOutSingleLoginButton\"],\"\\r\\n    \"]],\"\\r\\n  \"]],\"\\r\\n\\r\\n  \",[\"#\",[[0,\"unless\"],[0,\"hasPasswordService\"]],[\"\\r\\n    \",[\">\",\"_loginButtonsMessages\"],\"\\r\\n  \"]]]));\nTemplate.__define__(\"_loginButtonsLoggedOutPasswordServiceSeparator\",Package.handlebars.Handlebars.json_ast_to_func([\"<div class=\\\"or\\\">\\r\\n    <span class=\\\"hline\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\\r\\n    <span class=\\\"or-text\\\">or</span>\\r\\n    <span class=\\\"hline\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\\r\\n  </div>\"]));\nTemplate.__define__(\"_loginButtonsLoggedOutPasswordService\",Package.handlebars.Handlebars.json_ast_to_func([[\"#\",[[0,\"if\"],[0,\"inForgotPasswordFlow\"]],[\"\\r\\n    \",[\">\",\"_forgotPasswordForm\"],\"\\r\\n  \"],[\"\\r\\n    <div class=\\\"login-form login-password-form\\\">\\r\\n      \",[\"#\",[[0,\"each\"],[0,\"fields\"]],[\"\\r\\n        \",[\">\",\"_loginButtonsFormField\"],\"\\r\\n      \"]],\"\\r\\n\\r\\n      \",[\">\",\"_loginButtonsMessages\"],\"\\r\\n\\r\\n      <div class=\\\"login-button login-button-form-submit\\\" id=\\\"login-buttons-password\\\">\\r\\n        \",[\"#\",[[0,\"if\"],[0,\"inSignupFlow\"]],[\"\\r\\n          Create account\\r\\n        \"],[\"\\r\\n          Sign in\\r\\n        \"]],\"\\r\\n      </div>\\r\\n\\r\\n      \",[\"#\",[[0,\"if\"],[0,\"inLoginFlow\"]],[\"\\r\\n        \",[\"#\",[[0,\"if\"],[0,\"showCreateAccountLink\"]],[\"\\r\\n          <div class=\\\"additional-link-container\\\">\\r\\n            <a id=\\\"signup-link\\\" class=\\\"additional-link\\\">Create account</a>\\r\\n          </div>\\r\\n        \"]],\"\\r\\n\\r\\n        \",[\"#\",[[0,\"if\"],[0,\"showForgotPasswordLink\"]],[\"\\r\\n          <div class=\\\"additional-link-container\\\">\\r\\n            <a id=\\\"forgot-password-link\\\" class=\\\"additional-link\\\">Forgot password</a>\\r\\n          </div>\\r\\n        \"]],\"\\r\\n      \"]],\"\\r\\n\\r\\n      \",[\"#\",[[0,\"if\"],[0,\"inSignupFlow\"]],[\"\\r\\n        \",[\">\",\"_loginButtonsBackToLoginLink\"],\"\\r\\n      \"]],\"\\r\\n    </div>\\r\\n  \"]]]));\nTemplate.__define__(\"_forgotPasswordForm\",Package.handlebars.Handlebars.json_ast_to_func([\"<div class=\\\"login-form\\\">\\r\\n    <div id=\\\"forgot-password-email-label-and-input\\\"> \",\"\\r\\n      <label id=\\\"forgot-password-email-label\\\" for=\\\"forgot-password-email\\\">Email</label>\\r\\n      <input id=\\\"forgot-password-email\\\" type=\\\"email\\\"/>\\r\\n    </div>\\r\\n\\r\\n    \",[\">\",\"_loginButtonsMessages\"],\"\\r\\n\\r\\n    <div class=\\\"login-button login-button-form-submit\\\" id=\\\"login-buttons-forgot-password\\\">\\r\\n      Reset password\\r\\n    </div>\\r\\n\\r\\n    \",[\">\",\"_loginButtonsBackToLoginLink\"],\"\\r\\n  </div>\"]));\nTemplate.__define__(\"_loginButtonsBackToLoginLink\",Package.handlebars.Handlebars.json_ast_to_func([\"<div class=\\\"additional-link-container\\\">\\r\\n    <a id=\\\"back-to-login-link\\\" class=\\\"additional-link\\\">Sign in</a>\\r\\n  </div>\"]));\nTemplate.__define__(\"_loginButtonsFormField\",Package.handlebars.Handlebars.json_ast_to_func([[\"#\",[[0,\"if\"],[0,\"visible\"]],[\"\\r\\n    <div id=\\\"login-\",[\"{\",[[0,\"fieldName\"]]],\"-label-and-input\\\">\\r\\n      <label id=\\\"login-\",[\"{\",[[0,\"fieldName\"]]],\"-label\\\" for=\\\"login-\",[\"{\",[[0,\"fieldName\"]]],\"\\\">\\r\\n        \",[\"{\",[[0,\"fieldLabel\"]]],\"\\r\\n      </label>\\r\\n      <input id=\\\"login-\",[\"{\",[[0,\"fieldName\"]]],\"\\\" type=\\\"\",[\"{\",[[0,\"inputType\"]]],\"\\\" />\\r\\n    </div>\\r\\n  \"]]]));\nTemplate.__define__(\"_loginButtonsChangePassword\",Package.handlebars.Handlebars.json_ast_to_func([[\"#\",[[0,\"each\"],[0,\"fields\"]],[\"\\r\\n    \",[\">\",\"_loginButtonsFormField\"],\"\\r\\n  \"]],\"\\r\\n\\r\\n  \",[\">\",\"_loginButtonsMessages\"],\"\\r\\n\\r\\n  <div class=\\\"login-button login-button-form-submit\\\" id=\\\"login-buttons-do-change-password\\\">\\r\\n    Change password\\r\\n  </div>\"]));\n","Meteor.startup(function(){document.body.appendChild(Spark.render(Template.__define__(null,Package.handlebars.Handlebars.json_ast_to_func([[\">\",\"_resetPasswordDialog\"],\"\\r\\n  \",[\">\",\"_enrollAccountDialog\"],\"\\r\\n  \",[\">\",\"_justVerifiedEmailDialog\"],\"\\r\\n  \",[\">\",\"_configureLoginServiceDialog\"],\"\\r\\n\\r\\n  <!-- if we're not showing a dropdown, we need some other place to show messages -->\\r\\n  \",[\">\",\"_loginButtonsMessagesDialog\"]]))));});Template.__define__(\"_resetPasswordDialog\",Package.handlebars.Handlebars.json_ast_to_func([[\"#\",[[0,\"if\"],[0,\"inResetPasswordFlow\"]],[\"\\r\\n    <div class=\\\"hide-background\\\"></div>\\r\\n\\r\\n    <div class=\\\"accounts-dialog accounts-centered-dialog\\\">\\r\\n      <label id=\\\"reset-password-new-password-label\\\" for=\\\"reset-password-new-password\\\">\\r\\n        New password\\r\\n      </label>\\r\\n\\r\\n      <div>\\r\\n        <input id=\\\"reset-password-new-password\\\" type=\\\"password\\\" />\\r\\n      </div>\\r\\n\\r\\n      \",[\">\",\"_loginButtonsMessages\"],\"\\r\\n\\r\\n      <div class=\\\"login-button login-button-form-submit\\\" id=\\\"login-buttons-reset-password-button\\\">\\r\\n        Set password\\r\\n      </div>\\r\\n\\r\\n      <a class=\\\"accounts-close\\\" id=\\\"login-buttons-cancel-reset-password\\\">&times;</a>\\r\\n    </div>\\r\\n  \"]]]));\nTemplate.__define__(\"_enrollAccountDialog\",Package.handlebars.Handlebars.json_ast_to_func([[\"#\",[[0,\"if\"],[0,\"inEnrollAccountFlow\"]],[\"\\r\\n    <div class=\\\"hide-background\\\"></div>\\r\\n\\r\\n    <div class=\\\"accounts-dialog accounts-centered-dialog\\\">\\r\\n      <label id=\\\"enroll-account-password-label\\\" for=\\\"enroll-account-password\\\">\\r\\n        Choose a password\\r\\n      </label>\\r\\n\\r\\n      <div>\\r\\n        <input id=\\\"enroll-account-password\\\" type=\\\"password\\\" />\\r\\n      </div>\\r\\n\\r\\n      \",[\">\",\"_loginButtonsMessages\"],\"\\r\\n\\r\\n      <div class=\\\"login-button login-button-form-submit\\\" id=\\\"login-buttons-enroll-account-button\\\">\\r\\n        Create account\\r\\n      </div>\\r\\n\\r\\n      <a class=\\\"accounts-close\\\" id=\\\"login-buttons-cancel-enroll-account\\\">&times;</a>\\r\\n    </div>\\r\\n  \"]]]));\nTemplate.__define__(\"_justVerifiedEmailDialog\",Package.handlebars.Handlebars.json_ast_to_func([[\"#\",[[0,\"if\"],[0,\"visible\"]],[\"\\r\\n    <div class=\\\"accounts-dialog accounts-centered-dialog\\\">\\r\\n      Email verified\\r\\n      <div class=\\\"login-button\\\" id=\\\"just-verified-dismiss-button\\\">Dismiss</div>\\r\\n    </div>\\r\\n  \"]]]));\nTemplate.__define__(\"_configureLoginServiceDialog\",Package.handlebars.Handlebars.json_ast_to_func([[\"#\",[[0,\"if\"],[0,\"visible\"]],[\"\\r\\n    <div id=\\\"configure-login-service-dialog\\\" class=\\\"accounts-dialog accounts-centered-dialog\\\">\\r\\n      \",[\"!\",[[0,\"configurationSteps\"]]],\"\\r\\n\\r\\n      <p>\\r\\n        Now, copy over some details.\\r\\n      </p>\\r\\n      <p>\\r\\n        <table>\\r\\n          <colgroup>\\r\\n            <col span=\\\"1\\\" class=\\\"configuration_labels\\\">\\r\\n            <col span=\\\"1\\\" class=\\\"configuration_inputs\\\">\\r\\n          </colgroup>\\r\\n          \",[\"#\",[[0,\"each\"],[0,\"configurationFields\"]],[\"\\r\\n            <tr>\\r\\n              <td>\\r\\n                <label for=\\\"configure-login-service-dialog-\",[\"{\",[[0,\"property\"]]],\"\\\">\",[\"{\",[[0,\"label\"]]],\"</label>\\r\\n              </td>\\r\\n              <td>\\r\\n                <input id=\\\"configure-login-service-dialog-\",[\"{\",[[0,\"property\"]]],\"\\\" type=\\\"text\\\" />\\r\\n              </td>\\r\\n            </tr>\\r\\n          \"]],\"\\r\\n        </table>\\r\\n      </p>\\r\\n      <div class=\\\"new-section\\\">\\r\\n        <div class=\\\"login-button configure-login-service-dismiss-button\\\">\\r\\n          I'll do this later\\r\\n        </div>\\r\\n        <a class=\\\"accounts-close configure-login-service-dismiss-button\\\">&times;</a>\\r\\n\\r\\n        \",[\"#\",[[0,\"isolate\"]],[\"\\r\\n          <div class=\\\"login-button login-button-configure \",[\"#\",[[0,\"if\"],[0,\"saveDisabled\"]],[\"login-button-disabled\"]],\"\\\"\\r\\n             id=\\\"configure-login-service-dialog-save-configuration\\\">\\r\\n            Save Configuration\\r\\n          </div>\\r\\n        \"]],\"\\r\\n      </div>\\r\\n    </div>\\r\\n  \"]]]));\nTemplate.__define__(\"_loginButtonsMessagesDialog\",Package.handlebars.Handlebars.json_ast_to_func([[\"#\",[[0,\"if\"],[0,\"visible\"]],[\"\\r\\n    <div class=\\\"accounts-dialog accounts-centered-dialog\\\" id=\\\"login-buttons-message-dialog\\\">\\r\\n      \",[\">\",\"_loginButtonsMessages\"],\"\\r\\n      <div class=\\\"login-button\\\" id=\\\"messages-dialog-dismiss-button\\\">Dismiss</div>\\r\\n    </div>\\r\\n  \"]]]));\n","var VALID_KEYS = [\r\n  'dropdownVisible',\r\n\r\n  // XXX consider replacing these with one key that has an enum for values.\r\n  'inSignupFlow',\r\n  'inForgotPasswordFlow',\r\n  'inChangePasswordFlow',\r\n  'inMessageOnlyFlow',\r\n\r\n  'errorMessage',\r\n  'infoMessage',\r\n\r\n  // dialogs with messages (info and error)\r\n  'resetPasswordToken',\r\n  'enrollAccountToken',\r\n  'justVerifiedEmail',\r\n\r\n  'configureLoginServiceDialogVisible',\r\n  'configureLoginServiceDialogServiceName',\r\n  'configureLoginServiceDialogSaveDisabled'\r\n];\r\n\r\nvar validateKey = function (key) {\r\n  if (!_.contains(VALID_KEYS, key))\r\n    throw new Error(\"Invalid key in loginButtonsSession: \" + key);\r\n};\r\n\r\nvar KEY_PREFIX = \"Meteor.loginButtons.\";\r\n\r\n// XXX This should probably be package scope rather than exported\r\n// (there was even a comment to that effect here from before we had\r\n// namespacing) but accounts-ui-viewer uses it, so leave it as is for\r\n// now\r\nAccounts._loginButtonsSession = {\r\n  set: function(key, value) {\r\n    validateKey(key);\r\n    if (_.contains(['errorMessage', 'infoMessage'], key))\r\n      throw new Error(\"Don't set errorMessage or infoMessage directly. Instead, use errorMessage() or infoMessage().\");\r\n\r\n    this._set(key, value);\r\n  },\r\n\r\n  _set: function(key, value) {\r\n    Session.set(KEY_PREFIX + key, value);\r\n  },\r\n\r\n  get: function(key) {\r\n    validateKey(key);\r\n    return Session.get(KEY_PREFIX + key);\r\n  },\r\n\r\n  closeDropdown: function () {\r\n    this.set('inSignupFlow', false);\r\n    this.set('inForgotPasswordFlow', false);\r\n    this.set('inChangePasswordFlow', false);\r\n    this.set('inMessageOnlyFlow', false);\r\n    this.set('dropdownVisible', false);\r\n    this.resetMessages();\r\n  },\r\n\r\n  infoMessage: function(message) {\r\n    this._set(\"errorMessage\", null);\r\n    this._set(\"infoMessage\", message);\r\n    this.ensureMessageVisible();\r\n  },\r\n\r\n  errorMessage: function(message) {\r\n    this._set(\"errorMessage\", message);\r\n    this._set(\"infoMessage\", null);\r\n    this.ensureMessageVisible();\r\n  },\r\n\r\n  // is there a visible dialog that shows messages (info and error)\r\n  isMessageDialogVisible: function () {\r\n    return this.get('resetPasswordToken') ||\r\n      this.get('enrollAccountToken') ||\r\n      this.get('justVerifiedEmail');\r\n  },\r\n\r\n  // ensure that somethings displaying a message (info or error) is\r\n  // visible.  if a dialog with messages is open, do nothing;\r\n  // otherwise open the dropdown.\r\n  //\r\n  // notably this doesn't matter when only displaying a single login\r\n  // button since then we have an explicit message dialog\r\n  // (_loginButtonsMessageDialog), and dropdownVisible is ignored in\r\n  // this case.\r\n  ensureMessageVisible: function () {\r\n    if (!this.isMessageDialogVisible())\r\n      this.set(\"dropdownVisible\", true);\r\n  },\r\n\r\n  resetMessages: function () {\r\n    this._set(\"errorMessage\", null);\r\n    this._set(\"infoMessage\", null);\r\n  },\r\n\r\n  configureService: function (name) {\r\n    this.set('configureLoginServiceDialogVisible', true);\r\n    this.set('configureLoginServiceDialogServiceName', name);\r\n    this.set('configureLoginServiceDialogSaveDisabled', true);\r\n  }\r\n};\r\n","// for convenience\r\nvar loginButtonsSession = Accounts._loginButtonsSession;\r\n\r\nHandlebars.registerHelper(\r\n  \"loginButtons\",\r\n  function (options) {\r\n    if (options.hash.align === \"right\")\r\n      return new Handlebars.SafeString(Template._loginButtons({align: \"right\"}));\r\n    else\r\n      return new Handlebars.SafeString(Template._loginButtons({align: \"left\"}));\r\n  });\r\n\r\n// shared between dropdown and single mode\r\nTemplate._loginButtons.events({\r\n  'click #login-buttons-logout': function() {\r\n    Meteor.logout(function () {\r\n      loginButtonsSession.closeDropdown();\r\n    });\r\n  }\r\n});\r\n\r\nTemplate._loginButtons.preserve({\r\n  'input[id]': Spark._labelFromIdOrName\r\n});\r\n\r\n//\r\n// helpers\r\n//\r\n\r\ndisplayName = function () {\r\n  var user = Meteor.user();\r\n  if (!user)\r\n    return '';\r\n\r\n  if (user.profile && user.profile.name)\r\n    return user.profile.name;\r\n  if (user.username)\r\n    return user.username;\r\n  if (user.emails && user.emails[0] && user.emails[0].address)\r\n    return user.emails[0].address;\r\n\r\n  return '';\r\n};\r\n\r\n// returns an array of the login services used by this app. each\r\n// element of the array is an object (eg {name: 'facebook'}), since\r\n// that makes it useful in combination with handlebars {{#each}}.\r\n//\r\n// don't cache the output of this function: if called during startup (before\r\n// oauth packages load) it might not include them all.\r\n//\r\n// NOTE: It is very important to have this return password last\r\n// because of the way we render the different providers in\r\n// login_buttons_dropdown.html\r\ngetLoginServices = function () {\r\n  var self = this;\r\n\r\n  // First look for OAuth services.\r\n  var services = Package['accounts-oauth'] ? Accounts.oauth.serviceNames() : [];\r\n\r\n  // Be equally kind to all login services. This also preserves\r\n  // backwards-compatibility. (But maybe order should be\r\n  // configurable?)\r\n  services.sort();\r\n\r\n  // Add password, if it's there; it must come last.\r\n  if (hasPasswordService())\r\n    services.push('password');\r\n\r\n  return _.map(services, function(name) {\r\n    return {name: name};\r\n  });\r\n};\r\n\r\nhasPasswordService = function () {\r\n  return !!Package['accounts-password'];\r\n};\r\n\r\ndropdown = function () {\r\n  return hasPasswordService() || getLoginServices().length > 1;\r\n};\r\n\r\n// XXX improve these. should this be in accounts-password instead?\r\n//\r\n// XXX these will become configurable, and will be validated on\r\n// the server as well.\r\nvalidateUsername = function (username) {\r\n  if (username.length >= 3) {\r\n    return true;\r\n  } else {\r\n    loginButtonsSession.errorMessage(\"Username must be at least 3 characters long\");\r\n    return false;\r\n  }\r\n};\r\nvalidateEmail = function (email) {\r\n  if (passwordSignupFields() === \"USERNAME_AND_OPTIONAL_EMAIL\" && email === '')\r\n    return true;\r\n\r\n  if (email.indexOf('@') !== -1) {\r\n    return true;\r\n  } else {\r\n    loginButtonsSession.errorMessage(\"Invalid email\");\r\n    return false;\r\n  }\r\n};\r\nvalidatePassword = function (password) {\r\n  if (password.length >= 6) {\r\n    return true;\r\n  } else {\r\n    loginButtonsSession.errorMessage(\"Password must be at least 6 characters long\");\r\n    return false;\r\n  }\r\n};\r\n\r\n//\r\n// loginButtonLoggedOut template\r\n//\r\n\r\nTemplate._loginButtonsLoggedOut.dropdown = dropdown;\r\n\r\nTemplate._loginButtonsLoggedOut.services = getLoginServices;\r\n\r\nTemplate._loginButtonsLoggedOut.singleService = function () {\r\n  var services = getLoginServices();\r\n  if (services.length !== 1)\r\n    throw new Error(\r\n      \"Shouldn't be rendering this template with more than one configured service\");\r\n  return services[0];\r\n};\r\n\r\nTemplate._loginButtonsLoggedOut.configurationLoaded = function () {\r\n  return Accounts.loginServicesConfigured();\r\n};\r\n\r\n\r\n//\r\n// loginButtonsLoggedIn template\r\n//\r\n\r\n// decide whether we should show a dropdown rather than a row of\r\n// buttons\r\nTemplate._loginButtonsLoggedIn.dropdown = dropdown;\r\n\r\n\r\n\r\n//\r\n// loginButtonsLoggedInSingleLogoutButton template\r\n//\r\n\r\nTemplate._loginButtonsLoggedInSingleLogoutButton.displayName = displayName;\r\n\r\n\r\n\r\n//\r\n// loginButtonsMessage template\r\n//\r\n\r\nTemplate._loginButtonsMessages.errorMessage = function () {\r\n  return loginButtonsSession.get('errorMessage');\r\n};\r\n\r\nTemplate._loginButtonsMessages.infoMessage = function () {\r\n  return loginButtonsSession.get('infoMessage');\r\n};\r\n\r\n\r\n//\r\n// loginButtonsLoggingInPadding template\r\n//\r\n\r\nTemplate._loginButtonsLoggingInPadding.dropdown = dropdown;\r\n\r\n","// for convenience\r\nvar loginButtonsSession = Accounts._loginButtonsSession;\r\n\r\nTemplate._loginButtonsLoggedOutSingleLoginButton.events({\r\n  'click .login-button': function () {\r\n    var serviceName = this.name;\r\n    loginButtonsSession.resetMessages();\r\n    var callback = function (err) {\r\n      if (!err) {\r\n        loginButtonsSession.closeDropdown();\r\n      } else if (err instanceof Accounts.LoginCancelledError) {\r\n        // do nothing\r\n      } else if (err instanceof ServiceConfiguration.ConfigError) {\r\n        loginButtonsSession.configureService(serviceName);\r\n      } else {\r\n        loginButtonsSession.errorMessage(err.reason || \"Unknown error\");\r\n      }\r\n    };\r\n\r\n    var loginWithService = Meteor[\"loginWith\" + capitalize(serviceName)];\r\n\r\n    var options = {}; // use default scope unless specified\r\n    if (Accounts.ui._options.requestPermissions[serviceName])\r\n      options.requestPermissions = Accounts.ui._options.requestPermissions[serviceName];\r\n    if (Accounts.ui._options.requestOfflineToken[serviceName])\r\n      options.requestOfflineToken = Accounts.ui._options.requestOfflineToken[serviceName];\r\n\r\n    loginWithService(options, callback);\r\n  }\r\n});\r\n\r\nTemplate._loginButtonsLoggedOutSingleLoginButton.configured = function () {\r\n  return !!ServiceConfiguration.configurations.findOne({service: this.name});\r\n};\r\n\r\nTemplate._loginButtonsLoggedOutSingleLoginButton.capitalizedName = function () {\r\n  if (this.name === 'github')\r\n    // XXX we should allow service packages to set their capitalized name\r\n    return 'GitHub';\r\n  else\r\n    return capitalize(this.name);\r\n};\r\n\r\n// XXX from http://epeli.github.com/underscore.string/lib/underscore.string.js\r\nvar capitalize = function(str){\r\n  str = str == null ? '' : String(str);\r\n  return str.charAt(0).toUpperCase() + str.slice(1);\r\n};\r\n","// for convenience\r\nvar loginButtonsSession = Accounts._loginButtonsSession;\r\n\r\n// events shared between loginButtonsLoggedOutDropdown and\r\n// loginButtonsLoggedInDropdown\r\nTemplate._loginButtons.events({\r\n  'click #login-name-link, click #login-sign-in-link': function () {\r\n    loginButtonsSession.set('dropdownVisible', true);\r\n    Deps.flush();\r\n    correctDropdownZIndexes();\r\n  },\r\n  'click .login-close-text': function () {\r\n    loginButtonsSession.closeDropdown();\r\n  }\r\n});\r\n\r\n\r\n//\r\n// loginButtonsLoggedInDropdown template and related\r\n//\r\n\r\nTemplate._loginButtonsLoggedInDropdown.events({\r\n  'click #login-buttons-open-change-password': function() {\r\n    loginButtonsSession.resetMessages();\r\n    loginButtonsSession.set('inChangePasswordFlow', true);\r\n  }\r\n});\r\n\r\nTemplate._loginButtonsLoggedInDropdown.displayName = displayName;\r\n\r\nTemplate._loginButtonsLoggedInDropdown.inChangePasswordFlow = function () {\r\n  return loginButtonsSession.get('inChangePasswordFlow');\r\n};\r\n\r\nTemplate._loginButtonsLoggedInDropdown.inMessageOnlyFlow = function () {\r\n  return loginButtonsSession.get('inMessageOnlyFlow');\r\n};\r\n\r\nTemplate._loginButtonsLoggedInDropdown.dropdownVisible = function () {\r\n  return loginButtonsSession.get('dropdownVisible');\r\n};\r\n\r\nTemplate._loginButtonsLoggedInDropdownActions.allowChangingPassword = function () {\r\n  // it would be more correct to check whether the user has a password set,\r\n  // but in order to do that we'd have to send more data down to the client,\r\n  // and it'd be preferable not to send down the entire service.password document.\r\n  //\r\n  // instead we use the heuristic: if the user has a username or email set.\r\n  var user = Meteor.user();\r\n  return user.username || (user.emails && user.emails[0] && user.emails[0].address);\r\n};\r\n\r\n\r\n//\r\n// loginButtonsLoggedOutDropdown template and related\r\n//\r\n\r\nTemplate._loginButtonsLoggedOutDropdown.events({\r\n  'click #login-buttons-password': function () {\r\n    loginOrSignup();\r\n  },\r\n\r\n  'keypress #forgot-password-email': function (event) {\r\n    if (event.keyCode === 13)\r\n      forgotPassword();\r\n  },\r\n\r\n  'click #login-buttons-forgot-password': function () {\r\n    forgotPassword();\r\n  },\r\n\r\n  'click #signup-link': function () {\r\n    loginButtonsSession.resetMessages();\r\n\r\n    // store values of fields before swtiching to the signup form\r\n    var username = trimmedElementValueById('login-username');\r\n    var email = trimmedElementValueById('login-email');\r\n    var usernameOrEmail = trimmedElementValueById('login-username-or-email');\r\n    // notably not trimmed. a password could (?) start or end with a space\r\n    var password = elementValueById('login-password');\r\n\r\n    loginButtonsSession.set('inSignupFlow', true);\r\n    loginButtonsSession.set('inForgotPasswordFlow', false);\r\n    // force the ui to update so that we have the approprate fields to fill in\r\n    Deps.flush();\r\n\r\n    // update new fields with appropriate defaults\r\n    if (username !== null)\r\n      document.getElementById('login-username').value = username;\r\n    else if (email !== null)\r\n      document.getElementById('login-email').value = email;\r\n    else if (usernameOrEmail !== null)\r\n      if (usernameOrEmail.indexOf('@') === -1)\r\n        document.getElementById('login-username').value = usernameOrEmail;\r\n    else\r\n      document.getElementById('login-email').value = usernameOrEmail;\r\n    // \"login-password\" is preserved, since password fields aren't updated by Spark.\r\n\r\n    // Force redrawing the `login-dropdown-list` element because of\r\n    // a bizarre Chrome bug in which part of the DIV is not redrawn\r\n    // in case you had tried to unsuccessfully log in before\r\n    // switching to the signup form.\r\n    //\r\n    // Found tip on how to force a redraw on\r\n    // http://stackoverflow.com/questions/3485365/how-can-i-force-webkit-to-redraw-repaint-to-propagate-style-changes/3485654#3485654\r\n    var redraw = document.getElementById('login-dropdown-list');\r\n    redraw.style.display = 'none';\r\n    redraw.offsetHeight; // it seems that this line does nothing but is necessary for the redraw to work\r\n    redraw.style.display = 'block';\r\n  },\r\n  'click #forgot-password-link': function () {\r\n    loginButtonsSession.resetMessages();\r\n\r\n    // store values of fields before swtiching to the signup form\r\n    var email = trimmedElementValueById('login-email');\r\n    var usernameOrEmail = trimmedElementValueById('login-username-or-email');\r\n\r\n    loginButtonsSession.set('inSignupFlow', false);\r\n    loginButtonsSession.set('inForgotPasswordFlow', true);\r\n    // force the ui to update so that we have the approprate fields to fill in\r\n    Deps.flush();\r\n\r\n    // update new fields with appropriate defaults\r\n    if (email !== null)\r\n      document.getElementById('forgot-password-email').value = email;\r\n    else if (usernameOrEmail !== null)\r\n      if (usernameOrEmail.indexOf('@') !== -1)\r\n        document.getElementById('forgot-password-email').value = usernameOrEmail;\r\n\r\n  },\r\n  'click #back-to-login-link': function () {\r\n    loginButtonsSession.resetMessages();\r\n\r\n    var username = trimmedElementValueById('login-username');\r\n    var email = trimmedElementValueById('login-email')\r\n          || trimmedElementValueById('forgot-password-email'); // Ughh. Standardize on names?\r\n\r\n    loginButtonsSession.set('inSignupFlow', false);\r\n    loginButtonsSession.set('inForgotPasswordFlow', false);\r\n    // force the ui to update so that we have the approprate fields to fill in\r\n    Deps.flush();\r\n\r\n    if (document.getElementById('login-username'))\r\n      document.getElementById('login-username').value = username;\r\n    if (document.getElementById('login-email'))\r\n      document.getElementById('login-email').value = email;\r\n    // \"login-password\" is preserved, since password fields aren't updated by Spark.\r\n    if (document.getElementById('login-username-or-email'))\r\n      document.getElementById('login-username-or-email').value = email || username;\r\n  },\r\n  'keypress #login-username, keypress #login-email, keypress #login-username-or-email, keypress #login-password, keypress #login-password-again': function (event) {\r\n    if (event.keyCode === 13)\r\n      loginOrSignup();\r\n  }\r\n});\r\n\r\n// additional classes that can be helpful in styling the dropdown\r\nTemplate._loginButtonsLoggedOutDropdown.additionalClasses = function () {\r\n  if (!Accounts.password) {\r\n    return false;\r\n  } else {\r\n    if (loginButtonsSession.get('inSignupFlow')) {\r\n      return 'login-form-create-account';\r\n    } else if (loginButtonsSession.get('inForgotPasswordFlow')) {\r\n      return 'login-form-forgot-password';\r\n    } else {\r\n      return 'login-form-sign-in';\r\n    }\r\n  }\r\n};\r\n\r\nTemplate._loginButtonsLoggedOutDropdown.dropdownVisible = function () {\r\n  return loginButtonsSession.get('dropdownVisible');\r\n};\r\n\r\nTemplate._loginButtonsLoggedOutDropdown.hasPasswordService = hasPasswordService;\r\n\r\n// return all login services, with password last\r\nTemplate._loginButtonsLoggedOutAllServices.services = getLoginServices;\r\n\r\nTemplate._loginButtonsLoggedOutAllServices.isPasswordService = function () {\r\n  return this.name === 'password';\r\n};\r\n\r\nTemplate._loginButtonsLoggedOutAllServices.hasOtherServices = function () {\r\n  return getLoginServices().length > 1;\r\n};\r\n\r\nTemplate._loginButtonsLoggedOutAllServices.hasPasswordService =\r\n  hasPasswordService;\r\n\r\nTemplate._loginButtonsLoggedOutPasswordService.fields = function () {\r\n  var loginFields = [\r\n    {fieldName: 'username-or-email', fieldLabel: 'Username or Email',\r\n     visible: function () {\r\n       return _.contains(\r\n         [\"USERNAME_AND_EMAIL\", \"USERNAME_AND_OPTIONAL_EMAIL\"],\r\n         passwordSignupFields());\r\n     }},\r\n    {fieldName: 'username', fieldLabel: 'Username',\r\n     visible: function () {\r\n       return passwordSignupFields() === \"USERNAME_ONLY\";\r\n     }},\r\n    {fieldName: 'email', fieldLabel: 'Email', inputType: 'email',\r\n     visible: function () {\r\n       return passwordSignupFields() === \"EMAIL_ONLY\";\r\n     }},\r\n    {fieldName: 'password', fieldLabel: 'Password', inputType: 'password',\r\n     visible: function () {\r\n       return true;\r\n     }}\r\n  ];\r\n\r\n  var signupFields = [\r\n    {fieldName: 'username', fieldLabel: 'Username',\r\n     visible: function () {\r\n       return _.contains(\r\n         [\"USERNAME_AND_EMAIL\", \"USERNAME_AND_OPTIONAL_EMAIL\", \"USERNAME_ONLY\"],\r\n         passwordSignupFields());\r\n     }},\r\n    {fieldName: 'email', fieldLabel: 'Email', inputType: 'email',\r\n     visible: function () {\r\n       return _.contains(\r\n         [\"USERNAME_AND_EMAIL\", \"EMAIL_ONLY\"],\r\n         passwordSignupFields());\r\n     }},\r\n    {fieldName: 'email', fieldLabel: 'Email (optional)', inputType: 'email',\r\n     visible: function () {\r\n       return passwordSignupFields() === \"USERNAME_AND_OPTIONAL_EMAIL\";\r\n     }},\r\n    {fieldName: 'password', fieldLabel: 'Password', inputType: 'password',\r\n     visible: function () {\r\n       return true;\r\n     }},\r\n    {fieldName: 'password-again', fieldLabel: 'Password (again)',\r\n     inputType: 'password',\r\n     visible: function () {\r\n       // No need to make users double-enter their password if\r\n       // they'll necessarily have an email set, since they can use\r\n       // the \"forgot password\" flow.\r\n       return _.contains(\r\n         [\"USERNAME_AND_OPTIONAL_EMAIL\", \"USERNAME_ONLY\"],\r\n         passwordSignupFields());\r\n     }}\r\n  ];\r\n\r\n  return loginButtonsSession.get('inSignupFlow') ? signupFields : loginFields;\r\n};\r\n\r\nTemplate._loginButtonsLoggedOutPasswordService.inForgotPasswordFlow = function () {\r\n  return loginButtonsSession.get('inForgotPasswordFlow');\r\n};\r\n\r\nTemplate._loginButtonsLoggedOutPasswordService.inLoginFlow = function () {\r\n  return !loginButtonsSession.get('inSignupFlow') && !loginButtonsSession.get('inForgotPasswordFlow');\r\n};\r\n\r\nTemplate._loginButtonsLoggedOutPasswordService.inSignupFlow = function () {\r\n  return loginButtonsSession.get('inSignupFlow');\r\n};\r\n\r\nTemplate._loginButtonsLoggedOutPasswordService.showCreateAccountLink = function () {\r\n  return !Accounts._options.forbidClientAccountCreation;\r\n};\r\n\r\nTemplate._loginButtonsLoggedOutPasswordService.showForgotPasswordLink = function () {\r\n  return _.contains(\r\n    [\"USERNAME_AND_EMAIL\", \"USERNAME_AND_OPTIONAL_EMAIL\", \"EMAIL_ONLY\"],\r\n    passwordSignupFields());\r\n};\r\n\r\nTemplate._loginButtonsFormField.inputType = function () {\r\n  return this.inputType || \"text\";\r\n};\r\n\r\n\r\n//\r\n// loginButtonsChangePassword template\r\n//\r\n\r\nTemplate._loginButtonsChangePassword.events({\r\n  'keypress #login-old-password, keypress #login-password, keypress #login-password-again': function (event) {\r\n    if (event.keyCode === 13)\r\n      changePassword();\r\n  },\r\n  'click #login-buttons-do-change-password': function () {\r\n    changePassword();\r\n  }\r\n});\r\n\r\nTemplate._loginButtonsChangePassword.fields = function () {\r\n  return [\r\n    {fieldName: 'old-password', fieldLabel: 'Current Password', inputType: 'password',\r\n     visible: function () {\r\n       return true;\r\n     }},\r\n    {fieldName: 'password', fieldLabel: 'New Password', inputType: 'password',\r\n     visible: function () {\r\n       return true;\r\n     }},\r\n    {fieldName: 'password-again', fieldLabel: 'New Password (again)',\r\n     inputType: 'password',\r\n     visible: function () {\r\n       // No need to make users double-enter their password if\r\n       // they'll necessarily have an email set, since they can use\r\n       // the \"forgot password\" flow.\r\n       return _.contains(\r\n         [\"USERNAME_AND_OPTIONAL_EMAIL\", \"USERNAME_ONLY\"],\r\n         passwordSignupFields());\r\n     }}\r\n  ];\r\n};\r\n\r\n\r\n//\r\n// helpers\r\n//\r\n\r\nvar elementValueById = function(id) {\r\n  var element = document.getElementById(id);\r\n  if (!element)\r\n    return null;\r\n  else\r\n    return element.value;\r\n};\r\n\r\nvar trimmedElementValueById = function(id) {\r\n  var element = document.getElementById(id);\r\n  if (!element)\r\n    return null;\r\n  else\r\n    return element.value.replace(/^\\s*|\\s*$/g, \"\"); // trim() doesn't work on IE8;\r\n};\r\n\r\nvar loginOrSignup = function () {\r\n  if (loginButtonsSession.get('inSignupFlow'))\r\n    signup();\r\n  else\r\n    login();\r\n};\r\n\r\nvar login = function () {\r\n  loginButtonsSession.resetMessages();\r\n\r\n  var username = trimmedElementValueById('login-username');\r\n  var email = trimmedElementValueById('login-email');\r\n  var usernameOrEmail = trimmedElementValueById('login-username-or-email');\r\n  // notably not trimmed. a password could (?) start or end with a space\r\n  var password = elementValueById('login-password');\r\n\r\n  var loginSelector;\r\n  if (username !== null) {\r\n    if (!validateUsername(username))\r\n      return;\r\n    else\r\n      loginSelector = {username: username};\r\n  } else if (email !== null) {\r\n    if (!validateEmail(email))\r\n      return;\r\n    else\r\n      loginSelector = {email: email};\r\n  } else if (usernameOrEmail !== null) {\r\n    // XXX not sure how we should validate this. but this seems good enough (for now),\r\n    // since an email must have at least 3 characters anyways\r\n    if (!validateUsername(usernameOrEmail))\r\n      return;\r\n    else\r\n      loginSelector = usernameOrEmail;\r\n  } else {\r\n    throw new Error(\"Unexpected -- no element to use as a login user selector\");\r\n  }\r\n\r\n  Meteor.loginWithPassword(loginSelector, password, function (error, result) {\r\n    if (error) {\r\n      loginButtonsSession.errorMessage(error.reason || \"Unknown error\");\r\n    } else {\r\n      loginButtonsSession.closeDropdown();\r\n    }\r\n  });\r\n};\r\n\r\nvar signup = function () {\r\n  loginButtonsSession.resetMessages();\r\n\r\n  var options = {}; // to be passed to Accounts.createUser\r\n\r\n  var username = trimmedElementValueById('login-username');\r\n  if (username !== null) {\r\n    if (!validateUsername(username))\r\n      return;\r\n    else\r\n      options.username = username;\r\n  }\r\n\r\n  var email = trimmedElementValueById('login-email');\r\n  if (email !== null) {\r\n    if (!validateEmail(email))\r\n      return;\r\n    else\r\n      options.email = email;\r\n  }\r\n\r\n  // notably not trimmed. a password could (?) start or end with a space\r\n  var password = elementValueById('login-password');\r\n  if (!validatePassword(password))\r\n    return;\r\n  else\r\n    options.password = password;\r\n\r\n  if (!matchPasswordAgainIfPresent())\r\n    return;\r\n\r\n  Accounts.createUser(options, function (error) {\r\n    if (error) {\r\n      loginButtonsSession.errorMessage(error.reason || \"Unknown error\");\r\n    } else {\r\n      loginButtonsSession.closeDropdown();\r\n    }\r\n  });\r\n};\r\n\r\nvar forgotPassword = function () {\r\n  loginButtonsSession.resetMessages();\r\n\r\n  var email = trimmedElementValueById(\"forgot-password-email\");\r\n  if (email.indexOf('@') !== -1) {\r\n    Accounts.forgotPassword({email: email}, function (error) {\r\n      if (error)\r\n        loginButtonsSession.errorMessage(error.reason || \"Unknown error\");\r\n      else\r\n        loginButtonsSession.infoMessage(\"Email sent\");\r\n    });\r\n  } else {\r\n    loginButtonsSession.errorMessage(\"Invalid email\");\r\n  }\r\n};\r\n\r\nvar changePassword = function () {\r\n  loginButtonsSession.resetMessages();\r\n\r\n  // notably not trimmed. a password could (?) start or end with a space\r\n  var oldPassword = elementValueById('login-old-password');\r\n\r\n  // notably not trimmed. a password could (?) start or end with a space\r\n  var password = elementValueById('login-password');\r\n  if (!validatePassword(password))\r\n    return;\r\n\r\n  if (!matchPasswordAgainIfPresent())\r\n    return;\r\n\r\n  Accounts.changePassword(oldPassword, password, function (error) {\r\n    if (error) {\r\n      loginButtonsSession.errorMessage(error.reason || \"Unknown error\");\r\n    } else {\r\n      loginButtonsSession.set('inChangePasswordFlow', false);\r\n      loginButtonsSession.set('inMessageOnlyFlow', true);\r\n      loginButtonsSession.infoMessage(\"Password changed\");\r\n    }\r\n  });\r\n};\r\n\r\nvar matchPasswordAgainIfPresent = function () {\r\n  // notably not trimmed. a password could (?) start or end with a space\r\n  var passwordAgain = elementValueById('login-password-again');\r\n  if (passwordAgain !== null) {\r\n    // notably not trimmed. a password could (?) start or end with a space\r\n    var password = elementValueById('login-password');\r\n    if (password !== passwordAgain) {\r\n      loginButtonsSession.errorMessage(\"Passwords don't match\");\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\n\r\nvar correctDropdownZIndexes = function () {\r\n  // IE <= 7 has a z-index bug that means we can't just give the\r\n  // dropdown a z-index and expect it to stack above the rest of\r\n  // the page even if nothing else has a z-index.  The nature of\r\n  // the bug is that all positioned elements are considered to\r\n  // have z-index:0 (not auto) and therefore start new stacking\r\n  // contexts, with ties broken by page order.\r\n  //\r\n  // The fix, then is to give z-index:1 to all ancestors\r\n  // of the dropdown having z-index:0.\r\n  for(var n = document.getElementById('login-dropdown-list').parentNode;\r\n      n.nodeName !== 'BODY';\r\n      n = n.parentNode)\r\n    if (n.style.zIndex === 0)\r\n      n.style.zIndex = 1;\r\n};\r\n","// for convenience\r\nvar loginButtonsSession = Accounts._loginButtonsSession;\r\n\r\n\r\n//\r\n// populate the session so that the appropriate dialogs are\r\n// displayed by reading variables set by accounts-urls, which parses\r\n// special URLs. since accounts-ui depends on accounts-urls, we are\r\n// guaranteed to have these set at this point.\r\n//\r\n\r\nif (Accounts._resetPasswordToken) {\r\n  loginButtonsSession.set('resetPasswordToken', Accounts._resetPasswordToken);\r\n}\r\n\r\nif (Accounts._enrollAccountToken) {\r\n  loginButtonsSession.set('enrollAccountToken', Accounts._enrollAccountToken);\r\n}\r\n\r\n// Needs to be in Meteor.startup because of a package loading order\r\n// issue. We can't be sure that accounts-password is loaded earlier\r\n// than accounts-ui so Accounts.verifyEmail might not be defined.\r\nMeteor.startup(function () {\r\n  if (Accounts._verifyEmailToken) {\r\n    Accounts.verifyEmail(Accounts._verifyEmailToken, function(error) {\r\n      Accounts._enableAutoLogin();\r\n      if (!error)\r\n        loginButtonsSession.set('justVerifiedEmail', true);\r\n      // XXX show something if there was an error.\r\n    });\r\n  }\r\n});\r\n\r\n\r\n//\r\n// resetPasswordDialog template\r\n//\r\n\r\nTemplate._resetPasswordDialog.events({\r\n  'click #login-buttons-reset-password-button': function () {\r\n    resetPassword();\r\n  },\r\n  'keypress #reset-password-new-password': function (event) {\r\n    if (event.keyCode === 13)\r\n      resetPassword();\r\n  },\r\n  'click #login-buttons-cancel-reset-password': function () {\r\n    loginButtonsSession.set('resetPasswordToken', null);\r\n    Accounts._enableAutoLogin();\r\n  }\r\n});\r\n\r\nvar resetPassword = function () {\r\n  loginButtonsSession.resetMessages();\r\n  var newPassword = document.getElementById('reset-password-new-password').value;\r\n  if (!validatePassword(newPassword))\r\n    return;\r\n\r\n  Accounts.resetPassword(\r\n    loginButtonsSession.get('resetPasswordToken'), newPassword,\r\n    function (error) {\r\n      if (error) {\r\n        loginButtonsSession.errorMessage(error.reason || \"Unknown error\");\r\n      } else {\r\n        loginButtonsSession.set('resetPasswordToken', null);\r\n        Accounts._enableAutoLogin();\r\n      }\r\n    });\r\n};\r\n\r\nTemplate._resetPasswordDialog.inResetPasswordFlow = function () {\r\n  return loginButtonsSession.get('resetPasswordToken');\r\n};\r\n\r\n\r\n//\r\n// enrollAccountDialog template\r\n//\r\n\r\nTemplate._enrollAccountDialog.events({\r\n  'click #login-buttons-enroll-account-button': function () {\r\n    enrollAccount();\r\n  },\r\n  'keypress #enroll-account-password': function (event) {\r\n    if (event.keyCode === 13)\r\n      enrollAccount();\r\n  },\r\n  'click #login-buttons-cancel-enroll-account': function () {\r\n    loginButtonsSession.set('enrollAccountToken', null);\r\n    Accounts._enableAutoLogin();\r\n  }\r\n});\r\n\r\nvar enrollAccount = function () {\r\n  loginButtonsSession.resetMessages();\r\n  var password = document.getElementById('enroll-account-password').value;\r\n  if (!validatePassword(password))\r\n    return;\r\n\r\n  Accounts.resetPassword(\r\n    loginButtonsSession.get('enrollAccountToken'), password,\r\n    function (error) {\r\n      if (error) {\r\n        loginButtonsSession.errorMessage(error.reason || \"Unknown error\");\r\n      } else {\r\n        loginButtonsSession.set('enrollAccountToken', null);\r\n        Accounts._enableAutoLogin();\r\n      }\r\n    });\r\n};\r\n\r\nTemplate._enrollAccountDialog.inEnrollAccountFlow = function () {\r\n  return loginButtonsSession.get('enrollAccountToken');\r\n};\r\n\r\n\r\n//\r\n// justVerifiedEmailDialog template\r\n//\r\n\r\nTemplate._justVerifiedEmailDialog.events({\r\n  'click #just-verified-dismiss-button': function () {\r\n    loginButtonsSession.set('justVerifiedEmail', false);\r\n  }\r\n});\r\n\r\nTemplate._justVerifiedEmailDialog.visible = function () {\r\n  return loginButtonsSession.get('justVerifiedEmail');\r\n};\r\n\r\n\r\n//\r\n// loginButtonsMessagesDialog template\r\n//\r\n\r\nTemplate._loginButtonsMessagesDialog.events({\r\n  'click #messages-dialog-dismiss-button': function () {\r\n    loginButtonsSession.resetMessages();\r\n  }\r\n});\r\n\r\nTemplate._loginButtonsMessagesDialog.visible = function () {\r\n  var hasMessage = loginButtonsSession.get('infoMessage') || loginButtonsSession.get('errorMessage');\r\n  return !dropdown() && hasMessage;\r\n};\r\n\r\n\r\n//\r\n// configureLoginServiceDialog template\r\n//\r\n\r\nTemplate._configureLoginServiceDialog.events({\r\n  'click .configure-login-service-dismiss-button': function () {\r\n    loginButtonsSession.set('configureLoginServiceDialogVisible', false);\r\n  },\r\n  'click #configure-login-service-dialog-save-configuration': function () {\r\n    if (loginButtonsSession.get('configureLoginServiceDialogVisible') &&\r\n        ! loginButtonsSession.get('configureLoginServiceDialogSaveDisabled')) {\r\n      // Prepare the configuration document for this login service\r\n      var serviceName = loginButtonsSession.get('configureLoginServiceDialogServiceName');\r\n      var configuration = {\r\n        service: serviceName\r\n      };\r\n\r\n      // Fetch the value of each input field\r\n      _.each(configurationFields(), function(field) {\r\n        configuration[field.property] = document.getElementById(\r\n          'configure-login-service-dialog-' + field.property).value\r\n          .replace(/^\\s*|\\s*$/g, \"\"); // trim() doesnt work on IE8;\r\n      });\r\n\r\n      // Configure this login service\r\n      Meteor.call(\"configureLoginService\", configuration, function (error, result) {\r\n        if (error)\r\n          Meteor._debug(\"Error configuring login service \" + serviceName, error);\r\n        else\r\n          loginButtonsSession.set('configureLoginServiceDialogVisible', false);\r\n      });\r\n    }\r\n  },\r\n  // IE8 doesn't support the 'input' event, so we'll run this on the keyup as\r\n  // well. (Keeping the 'input' event means that this also fires when you use\r\n  // the mouse to change the contents of the field, eg 'Cut' menu item.)\r\n  'input, keyup input': function (event) {\r\n    // if the event fired on one of the configuration input fields,\r\n    // check whether we should enable the 'save configuration' button\r\n    if (event.target.id.indexOf('configure-login-service-dialog') === 0)\r\n      updateSaveDisabled();\r\n  }\r\n});\r\n\r\n// check whether the 'save configuration' button should be enabled.\r\n// this is a really strange way to implement this and a Forms\r\n// Abstraction would make all of this reactive, and simpler.\r\nvar updateSaveDisabled = function () {\r\n  var anyFieldEmpty = _.any(configurationFields(), function(field) {\r\n    return document.getElementById(\r\n      'configure-login-service-dialog-' + field.property).value === '';\r\n  });\r\n\r\n  loginButtonsSession.set('configureLoginServiceDialogSaveDisabled', anyFieldEmpty);\r\n};\r\n\r\n// Returns the appropriate template for this login service.  This\r\n// template should be defined in the service's package\r\nvar configureLoginServiceDialogTemplateForService = function () {\r\n  var serviceName = loginButtonsSession.get('configureLoginServiceDialogServiceName');\r\n  return Template['configureLoginServiceDialogFor' + capitalize(serviceName)];\r\n};\r\n\r\nvar configurationFields = function () {\r\n  var template = configureLoginServiceDialogTemplateForService();\r\n  return template.fields();\r\n};\r\n\r\nTemplate._configureLoginServiceDialog.configurationFields = function () {\r\n  return configurationFields();\r\n};\r\n\r\nTemplate._configureLoginServiceDialog.visible = function () {\r\n  return loginButtonsSession.get('configureLoginServiceDialogVisible');\r\n};\r\n\r\nTemplate._configureLoginServiceDialog.configurationSteps = function () {\r\n  // renders the appropriate template\r\n  return configureLoginServiceDialogTemplateForService()();\r\n};\r\n\r\nTemplate._configureLoginServiceDialog.saveDisabled = function () {\r\n  return loginButtonsSession.get('configureLoginServiceDialogSaveDisabled');\r\n};\r\n\r\n// XXX from http://epeli.github.com/underscore.string/lib/underscore.string.js\r\nvar capitalize = function(str){\r\n  str = str == null ? '' : String(str);\r\n  return str.charAt(0).toUpperCase() + str.slice(1);\r\n};\r\n"]}